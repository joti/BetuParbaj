# Default values that can be overridden by system properties  
betuparbaj.log.dir=${catalina.base}\\logs
betuparbaj.log.file=betuparbaj
betuparbaj.log.threshold=ALL

#heroku uses ephemeral file system, let's log to stdout
#betuparbaj.root.logger=DEBUG,X
betuparbaj.root.logger= INFO,Y

# Root logger
log4j.rootLogger = ${betuparbaj.root.logger}
#log4j.logger.betuparbaj = ${betuparbaj.root.logger}
# Logging threshold
log4j.threshold=${betuparbaj.log.threshold}

# X Appender settings
log4j.appender.X = org.apache.log4j.rolling.RollingFileAppender
log4j.appender.X.File = ${betuparbaj.log.dir}\\${betuparbaj.log.file}
log4j.appender.X.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy  
log4j.appender.X.rollingPolicy.ActiveFileName=${betuparbaj.log.dir}\\${betuparbaj.log.file}.log
log4j.appender.X.rollingPolicy.FileNamePattern=${betuparbaj.log.dir}\\${betuparbaj.log.file}.%d{yyyyMMdd}.log.gz
log4j.appender.X.layout = org.apache.log4j.PatternLayout
# Pattern format: Time Level (Source:LineNum) - LogMessage 
log4j.appender.X.layout.conversionPattern = %d{ABSOLUTE} %5p (%F:%L) - %m%n

# Y Appender settings
log4j.appender.Y=org.apache.log4j.ConsoleAppender
log4j.appender.Y.Target=System.out
log4j.appender.Y.layout=org.apache.log4j.PatternLayout
log4j.appender.Y.layout.conversionPattern = %d{ABSOLUTE} %5p (%F:%L) - %m%n
